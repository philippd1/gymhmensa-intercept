


<html>
<head>
    <link href="../../css/style.css" type="text/css" rel="stylesheet" />
    <link href="../../css/datagrid.css" type="text/css" rel="stylesheet" />
    <link href="../../css/Dateireiter.css" type="text/css" rel="stylesheet" />
    <link href="../../css/terminkalender.css" type="text/css" rel="stylesheet" />
    <link href="../../css/rating.css" type="text/css" rel="stylesheet" />
    <style type="text/css">
        font#strDetails:hover {
            color: Black;
            font-weight: bold;
        }
    </style>
    <script src="../../javascript/jquery.js" type="text/javascript"></script>
    <script src="../../javascript/BitteWarten.js" type="text/javascript"></script>
    <script src="../../javascript/MenueDetailBox.js" type="text/javascript"> </script>
    <script src="../../javascript/rating.js" type="text/javascript"> </script>
    <script type="text/javascript">
        $(document).ready(function () {
            //$(window).load(function () {
            try {
                var maxheight = 0;
                var tmpheight;
                //tmpheight = $("#td0_201").height();
                //maximale Höhe aller td's bestimmen
                for (var i = 0; i < 7; i++) {
                    //$('input[id^="chk_"]').each
                    $('td[id^="td' + i + '"]').each(
                        function () {
                            tmpheight = $(this).height();
                            if (tmpheight > maxheight) { maxheight = tmpheight; }
                        });
                }
                for (var i = 0; i < 7; i++) {
                    $('td[id^="td' + i + '"]').each(
                        function () {
                            $(this).height(maxheight);
                        });
                }
            } catch (err) {
                alert(err.message);
            }
        });
    </script>
</head>
<body>
    <form name="Form1" method="post" action="./WochenPlanExternForm.aspx" id="Form1">
<div>
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="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ZTo8L3U+PGJyIC8+PC9iaWc+DQo8c3VwPigwMSk8L3N1cD5taXQgQW50aW94aWRhdGlvbnNtaXR0ZWxuLCANCjxzdXA+KDAyKTwvc3VwPm1pdCBFbXVsZ2F0b3JlbiwgDQo8c3VwPigwMyk8L3N1cD5taXQgRmFyYnN0b2ZmLCANCjxzdXA+KDA0KTwvc3VwPiBtaXQgR2VzY2htYWNrc3ZlcnN0w6Rya2VyLCANCjxzdXA+KDA1KTwvc3VwPiBtaXQgS29uc2VydmllcnVuZ3NzdG9mZiwgDQo8c3VwPigwNik8L3N1cD4gbWl0IFPDpHVlcnVuZ3NtaXR0ZWwgLyBTw6R1cnVuZ3NyZWd1bGF0b3JlbiwgDQo8c3VwPigwNyk8L3N1cD4gbWl0IFN0YWJpbGlzYXRvcmVuLCANCjxzdXA+KDA5KTwvc3VwPiBtaXQgU8O8w59zdG9mZiAvIFPDvMOfdW5nc21pdHRlbCwNCjxzdXA+KDEwKTwvc3VwPiBtaXQgVmVyZGlja3VuZ3NtaXR0ZWwsIA0KPHN1cD4oMTEpPC9zdXA+Z2VzY2h3w6RyenQsDQo8c3VwPigxMik8L3N1cD4gZ2V3YWNoc3QsDQo8c3VwPigxMTMpPC9zdXA+IG1pdCBGcnVrdG9zZSwNCjxzdXA+KDE0KTwvc3VwPiBtaXQgQWNlc3VsZmFtIEssDQo8c3VwPigxNSk8L3N1cD4gbWl0IEJlbnpvZXPDpHVyZSwNCjxzdXA+KDE2KTwvc3VwPiBtaXQgTml0cml0cMO2a2Vsc2FseiB1bmQgTml0cmF0LCANCjxzdXA+KDE3KTwvc3VwPiBtaXQgUGhvc3BoYXQsIA0KPHN1cD4oMTgpPC9zdXA+IGdlc2Nod2VmZWx0LCANCjxzdXA+KDE5KTwvc3VwPiBtaXQgUGhlbnlsYWxhaW5xdWVsbGUsIA0KPHN1cD4oWCk8L3N1cD4gbWl0IEFsa29ob2wsDQo8YnI+PGI+DQoNCjxiciAvPjx1PkFsbGVyZ2VuZTo8L3U+PGJyIC8+PC9iaWc+DQo8c3VwPihBKTwvc3VwPkdsdXRlbiwNCjxzdXA+KEExKTwvc3VwPiBlbnRow6RsdCBHbHV0ZW4tV2VpemVuLA0KPHN1cD4oQTIpPC9zdXA+IGVudGjDpGx0IEdsdXRlbi0gUm9nZ2VuLA0KPHN1cD4oQTMpPC9zdXA+IGVudGjDpGx0IEdsdXRlbi0gR2Vyc3RlLA0KPHN1cD4oQTQpPC9zdXA+IGVudGjDpGx0IEdsdXRlbi0gSGFmZXIsIA0KPHN1cD4oQTUpPC9zdXA+IGVudGjDpGx0IEdsdXRlbi0gRGlua2VsLA0KPHN1cD4oQTYpPC9zdXA+ZW50aMOkbHQgS2FtdXQsDQo8c3VwPihCKTwvc3VwPmVudGjDpGx0ICBLcmVic3RpZXJlIHVuZCBLcmVic3RpZXJlcnpldWduaXNzZSwNCjxzdXA+KEMpPC9zdXA+ZW50aMOkbHQgSMO8aG5lcmVpd2Vpw58sIEVpZXIgdW5kIEVpZXJ6ZXVnbmlzc2UsDQo8c3VwPihEKTwvc3VwPmVudGjDpGx0IEZpc2NoIHVuZCBGaXNjaGVyemV1Z25pc3NlLA0KPHN1cD4oRSk8L3N1cD5lbnRow6RsdCBFcmRuw7xzc2UgdW5kIEVyZG51c3NlcnpldWduaXNzZSwNCjxzdXA+KEYpPC9zdXA+ZW50aMOkbHQgU29qYSB1bmQgU29qYWVyemV1Z25pc3NlLA0KPHN1cD4oRyk8L3N1cD5lbnRow6RsdCBNaWxjaGVpd2Vpw58sIE1pbGNoIHVuZCBNaWxjaGVyemV1Z25pc3NlIChlaW5zY2hsaWXDn2xpY2ggTGFrdG9zZSksDQo8c3VwPihHTCk8L3N1cD5lbnRow6RsdCBHbHV0ZW5oYWx0aWdlbSBHZXRyZWlkZSwNCjxzdXA+KEgpPC9zdXA+ZW50aMOkbHQgU2NoYWxlbmZyw7xjaHRlIHVuZCBTY2hhbGVuZnLDvGNodGVlcnpldWduaXNzZSwNCjxzdXA+KEgxKTwvc3VwPmVudGjDpGx0IE1hbmRlbG4sDQo8c3VwPihIMik8L3N1cD5lbnRow6RsdCBIYXNlbG51c3MsDQo8c3VwPihIMyk8L3N1cD5lbnRow6RsdCBXYWxsbsO8c3NlLA0KPHN1cD4oSDQpPC9zdXA+ZW50aMOkbHQgQ2FzaGV3bsO8c3NlLA0KPHN1cD4oSDUpPC9zdXA+ZW50aMOkbHQgUGVjYW7DvHNzZSwNCjxzdXA+KDYpPC9zdXA+ZW50aMOkbHQgUGFyYW7DvHNzZSwNCjxzdXA+KEg3KTwvc3VwPmVudGjDpGx0IFBpc3RhemllbiwNCjxzdXA+KEg4KTwvc3VwPmVudGjDpGx0IE1hY2FkYW1pYSAvIFF1ZWVuc2xhbmRuw7xzc2UsDQo8c3VwPihMKTwvc3VwPmVudGjDpGx0IFNlbGxlcmllIHVuZCBTZWxsZXJpZWVyemV1Z25pc3NlLA0KPHN1cD4oTSk8L3N1cD5lbnRow6RsdCBTZW5mIHVuZCBTZW5mZXJ6ZXVnbmlzc2UsDQo8c3VwPihOKTwvc3VwPmVudGjDpGx0IFNlc2FtIHVuZCBTZXNhbWVyemV1Z25pc3NlLA0KPHN1cD4oTyk8L3N1cD5lbnRow6RsdCBTY2h3ZWZlbGRpb3hpZCB1bmQgU3VsZml0ZSwNCjxzdXA+KG9Tdyk8L3N1cD5vaG5lIFNjaHdlaW5lZmxlaXNjaCwNCjxzdXA+KFApPC9zdXA+ZW50aMOkbHQgTHVwaW5lbiB1bmQgTHVwaW5lbmVyemV1Z25pc3NlLA0KPHN1cD4oUmkpPC9zdXA+bWl0IFJpbmRmbGVpc2NoLA0KPHN1cD4oUik8L3N1cD5lbnRow6RsdCBXZWljaHRpZXJlIHVuZCBXZWljaHRpZXJlcnpldWduaXNzZSwNCjxzdXA+KFN3KTwvc3VwPmVudGjDpGx0IFNjaHdlaW5lZmxlaXNjaCwNCjxzdXA+KFRvKTwvc3VwPmVudGjDpGx0IFRvbWF0ZW5wcm9kdWt0ZSwNCjxzdXA+KHYpPC9zdXA+dmVnZXRhcmlzY2gsDQo8L2JpZz48Yj48Yj4NCjxiPjxiPsOEbmRlcnVuZ2VuIHZvcmJlaGFsdGVuPC9iPmRkZIBCzHD23XD6fo6rIFGE1xCXbdjD5twqQuAwUqTgnOQ6" />
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['Form1'];
if (!theForm) {
    theForm = document.Form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="/WebResource.axd?d=f7M9Wz2B7LQs5DOM_yZLfSt4Ws0kNZ2sNqOXhbAY3g-Tuv8Z2LPzYLlaRTzG9LDfSGse4Hfg3uO_h1sjooVibYzlN4kb-aghbCVOIFxt0EM1&amp;t=636476158140000000" type="text/javascript"></script>

<div>

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="188062C9" />
	<input type="hidden" name="__SCROLLPOSITIONX" id="__SCROLLPOSITIONX" value="0" />
	<input type="hidden" name="__SCROLLPOSITIONY" id="__SCROLLPOSITIONY" value="0" />
	<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
	<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEdAASrZA7d0064fxuWIyJe+fG5miw7OCf+0NSQqvnBlDPNHmb5X2UREoStMBYXaGgkCxATzxb23e2q+EVLxCp8ymWl4PPrUh1H5ofztUGReuI8Jne7Hz4rfikvNhV3Lg53tjM=" />
</div>
        <center>
<div id="divNavigation" style="width: 780px;"></div>

                    <table class="Outertable" style="width: 705px">
                        <tbody>
                            
                            <tr>
                                <td class="tdHeaderTop" valign="top" align="center" style="width: 97%">
                                    <input type="submit" name="btnZurueck" value="&lt;" id="btnZurueck" class="button" style="width:25px;" />
                                    &nbsp;
                                    <span id="lblWoche" style="font-weight:bold;">28.05.2018 - 03.06.2018 (KW22)</span>
                                    &nbsp;
                                    <input type="submit" name="btnVor" value=">" id="btnVor" class="button" style="width:25px;" />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="submit" name="btnHideImage" value="Bilder ausblenden" id="btnHideImage" class="button" style="width:120px;" />

                                    <span id="lblLegende1" class="tdselected" style="display:inline-block;height:20px;width:20px;"></span>
                                    &nbsp;=&nbsp;
                                    <span id="lblMeineBestellungen">meine Bestellungen</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <span id="lblHinweis" class="hinweis"></span>
                                </td>
                            </tr>
                            <tr>
                                <td align="center">

                                </td>
                            </tr>
                            <tr>
                                <td align="center">
                                    <table id="tblMain" cellspacing="10" border="0" style="width:768px;">
	<tr class="tdHeader">
		<th style="width:10%;background-color:#F0F0FF;"></th><th align="center" style="width:100px;">Mo, 28.05.2018</th><th align="center" style="width:100px;">Di, 29.05.2018</th><th align="center" style="width:100px;">Mi, 30.05.2018</th><th align="center" style="width:100px;">Do, 31.05.2018</th>
	</tr><tr class="tdFooter2" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Mittagsgericht 1</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Mittagsgericht 2</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter2" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Schnitzelsandwich</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Nudelbox</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter2" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Mittagsgericht 1 glutenfrei</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter" style="background-color:#D0E0FF;">
		<td style="font-weight:bold;">Nudelbox XL</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td><td align="center" valign="middle" title="gesperrter Tag" alt="gesperrter Tag" style="width:120px;cursor:url('../img/noclick.gif'),default;width:120px;">Keine Ausgabe <br/> <br/> Bemerkung: Pfingstferien 2018</td>
	</tr><tr class="tdFooter">
		<td valign="top" style="background-color:#F0F0FF;"></td><td style="background-color:#F0F0FF;"></td><td style="background-color:#F0F0FF;"></td><td style="background-color:#F0F0FF;"></td><td style="background-color:#F0F0FF;"></td>
	</tr>
</table>
                                </td>
                            </tr>
                            <tr>
                            <td style="height:30px; vertical-align:bottom;">
                                <span id="lblSpeiesplanHinweis">Das Essen für das Gymnasium Herzogenaurach wird zubereitet durch:<br />
<br /><font color=”#0000FF″><big><b><u>Die Menü-Manufaktur Hofmann</b> </u></big></font> <br /><br /><br />
<u> Zusatzstoffe:</u><br /></big>
<sup>(01)</sup>mit Antioxidationsmitteln, 
<sup>(02)</sup>mit Emulgatoren, 
<sup>(03)</sup>mit Farbstoff, 
<sup>(04)</sup> mit Geschmacksverstärker, 
<sup>(05)</sup> mit Konservierungsstoff, 
<sup>(06)</sup> mit Säuerungsmittel / Säurungsregulatoren, 
<sup>(07)</sup> mit Stabilisatoren, 
<sup>(09)</sup> mit Süßstoff / Süßungsmittel,
<sup>(10)</sup> mit Verdickungsmittel, 
<sup>(11)</sup>geschwärzt,
<sup>(12)</sup> gewachst,
<sup>(113)</sup> mit Fruktose,
<sup>(14)</sup> mit Acesulfam K,
<sup>(15)</sup> mit Benzoesäure,
<sup>(16)</sup> mit Nitritpökelsalz und Nitrat, 
<sup>(17)</sup> mit Phosphat, 
<sup>(18)</sup> geschwefelt, 
<sup>(19)</sup> mit Phenylalainquelle, 
<sup>(X)</sup> mit Alkohol,
<br><b>

<br /><u>Allergene:</u><br /></big>
<sup>(A)</sup>Gluten,
<sup>(A1)</sup> enthält Gluten-Weizen,
<sup>(A2)</sup> enthält Gluten- Roggen,
<sup>(A3)</sup> enthält Gluten- Gerste,
<sup>(A4)</sup> enthält Gluten- Hafer, 
<sup>(A5)</sup> enthält Gluten- Dinkel,
<sup>(A6)</sup>enthält Kamut,
<sup>(B)</sup>enthält  Krebstiere und Krebstiererzeugnisse,
<sup>(C)</sup>enthält Hühnereiweiß, Eier und Eierzeugnisse,
<sup>(D)</sup>enthält Fisch und Fischerzeugnisse,
<sup>(E)</sup>enthält Erdnüsse und Erdnusserzeugnisse,
<sup>(F)</sup>enthält Soja und Sojaerzeugnisse,
<sup>(G)</sup>enthält Milcheiweiß, Milch und Milcherzeugnisse (einschließlich Laktose),
<sup>(GL)</sup>enthält Glutenhaltigem Getreide,
<sup>(H)</sup>enthält Schalenfrüchte und Schalenfrüchteerzeugnisse,
<sup>(H1)</sup>enthält Mandeln,
<sup>(H2)</sup>enthält Haselnuss,
<sup>(H3)</sup>enthält Wallnüsse,
<sup>(H4)</sup>enthält Cashewnüsse,
<sup>(H5)</sup>enthält Pecanüsse,
<sup>(6)</sup>enthält Paranüsse,
<sup>(H7)</sup>enthält Pistazien,
<sup>(H8)</sup>enthält Macadamia / Queenslandnüsse,
<sup>(L)</sup>enthält Sellerie und Sellerieerzeugnisse,
<sup>(M)</sup>enthält Senf und Senferzeugnisse,
<sup>(N)</sup>enthält Sesam und Sesamerzeugnisse,
<sup>(O)</sup>enthält Schwefeldioxid und Sulfite,
<sup>(oSw)</sup>ohne Schweinefleisch,
<sup>(P)</sup>enthält Lupinen und Lupinenerzeugnisse,
<sup>(Ri)</sup>mit Rindfleisch,
<sup>(R)</sup>enthält Weichtiere und Weichtiererzeugnisse,
<sup>(Sw)</sup>enthält Schweinefleisch,
<sup>(To)</sup>enthält Tomatenprodukte,
<sup>(v)</sup>vegetarisch,
</big><b><b>
<b><b>Änderungen vorbehalten</b></span>
                            </td>
                            </tr>
                        </tbody>
                    </table>
        </center>
    

<script type="text/javascript">
//<![CDATA[

theForm.oldSubmit = theForm.submit;
theForm.submit = WebForm_SaveScrollPositionSubmit;

theForm.oldOnSubmit = theForm.onsubmit;
theForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;
//]]>
</script>
</form>
</body>
</html>
